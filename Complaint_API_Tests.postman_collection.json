{
  "info": {
    "name": "Community Engagement Platform - Complaint API",
    "description": "Test collection for the complaint routes in Community Engagement Platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "your_jwt_token_here",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "User Registration",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/users/register",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "register"]
        },
        "description": "Register a new user"
      }
    },
    {
      "name": "User Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/users/login",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "login"]
        },
        "description": "Login to get JWT authentication token. Copy the token from response and update the authToken variable."
      }
    },
    {
      "name": "Create Complaint with Photo",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "headline",
              "value": "Pothole on Main Street",
              "type": "text"
            },
            {
              "key": "description",
              "value": "Large pothole causing traffic issues and vehicle damage",
              "type": "text"
            },
            {
              "key": "address",
              "value": "123 Main Street, Downtown",
              "type": "text"
            },
            {
              "key": "category",
              "value": "roads",
              "type": "text"
            },
            {
              "key": "priority",
              "value": "high",
              "type": "text"
            },
            {
              "key": "photo",
              "type": "file",
              "src": "path/to/your/image.jpg"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/api/complaints",
          "host": ["{{baseUrl}}"],
          "path": ["api", "complaints"]
        },
        "description": "Create a new complaint with photo upload"
      }
    },
    {
      "name": "Create Complaint without Photo",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "headline",
              "value": "Broken Streetlight",
              "type": "text"
            },
            {
              "key": "description",
              "value": "Street light has been out for 3 days, making the area unsafe at night",
              "type": "text"
            },
            {
              "key": "address",
              "value": "456 Oak Avenue",
              "type": "text"
            },
            {
              "key": "category",
              "value": "electricity",
              "type": "text"
            },
            {
              "key": "priority",
              "value": "medium",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/api/complaints",
          "host": ["{{baseUrl}}"],
          "path": ["api", "complaints"]
        },
        "description": "Create a complaint without photo"
      }
    },
    {
      "name": "Get All Complaints",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/complaints",
          "host": ["{{baseUrl}}"],
          "path": ["api", "complaints"]
        },
        "description": "Get all complaints for the authenticated user"
      }
    },
    {
      "name": "Get Single Complaint",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/complaints/COMPLAINT_ID_HERE",
          "host": ["{{baseUrl}}"],
          "path": ["api", "complaints", "COMPLAINT_ID_HERE"]
        },
        "description": "Get a specific complaint by ID (replace COMPLAINT_ID_HERE with actual ID)"
      }
    },
    {
      "name": "Get Complaint Photo",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/complaints/COMPLAINT_ID_HERE/photo",
          "host": ["{{baseUrl}}"],
          "path": ["api", "complaints", "COMPLAINT_ID_HERE", "photo"]
        },
        "description": "Get photo for a specific complaint (replace COMPLAINT_ID_HERE with actual ID)"
      }
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/",
          "host": ["{{baseUrl}}"],
          "path": [""]
        },
        "description": "Check if the server is running"
      }
    }
  ]
}